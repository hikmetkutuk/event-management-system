version: '3.6'
services:
  event-db:
    image: postgres:13.1
    container_name: ems-event-db
    environment:
      POSTGRES_DB: ems-event
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5441:5432"
    volumes:
      - event-db:/var/lib/postgresql/data

  keycloak:
    image: quay.io/keycloak/keycloak:22.0.1
    container_name: ems-keycloak
    ports:
      - "8888:8080"
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    command: [ "start-dev" ]
    volumes:
      - keycloak-data:/opt/jboss/keycloak/standalone/data

  elasticsearch:
    image: elasticsearch:7.16.2
    container_name: ems-elasticsearch
    restart: always
    volumes:
      - elastic-data:/usr/share/elasticsearch/data/
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
      discovery.type: single-node
    ports:
      - '9200:9200'
      - '9300:9300'
    networks:
      - elk

  logstash:
    image: logstash:7.16.2
    container_name: ems-logstash
    restart: always
    volumes:
      - .\logstash.conf:/logstash_dir
    command: logstash -f /logstash_dir/logstash.conf
    depends_on:
      - elasticsearch
    ports:
      - '9600:9600'
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    networks:
      - elk

  kibana:
    image: kibana:7.16.2
    container_name: ems-kibana
    restart: always
    ports:
      - '5601:5601'
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    depends_on:
      - elasticsearch
    networks:
      - elk

  zookeeper:
    image: 'bitnami/zookeeper:3.8'
    container_name: ems-zookeeper
    ports:
      - '2181:2181'
    volumes:
      - 'zookeeper-data:/bitnami'
    networks:
      - kafka-net
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: 'bitnami/kafka:3.5'
    container_name: ems-kafka
    ports:
      - '9092:9092'
    volumes:
      - 'kafka-data:/bitnami'
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_ADVERTISED_LISTENERS= PLAINTEXT://broker:9092,PLAINTEXT_HOST://localhost:29092
    networks:
      - kafka-net
    depends_on:
      - zookeeper

  kafdrop:
    image: obsidiandynamics/kafdrop
    container_name: ems-kafdrop
    restart: "no"
    networks:
      - kafka-net
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka:9092"
    depends_on:
      - "kafka"

  mailhog:
    image: mailhog/mailhog
    container_name: ems-mailhog
    ports:
      - 1025:1025 # SMTP server ports
      - 8025:8025 # Web UI ports

volumes:
  elastic-data: {}
  keycloak-data: {}
  event-db: {}
  zookeeper-data: {}
  kafka-data: {}

networks:
  elk:
  kafka-net:
    driver: bridge